{
    "name": "vscode-sksl",
    "publisher": "seven332",
    "version": "0.1.7",
    "displayName": "SkSL Language Server",
    "description": "Code IntelliSense for Skia's shading language.",
    "license": "SEE LICENSE IN LICENSE",
    "categories": [
        "Programming Languages"
    ],
    "keywords": [
        "sksl",
        "skia"
    ],
    "homepage": "https://github.com/seven332/vscode-sksl",
    "repository": {
        "type": "git",
        "url": "https://github.com/seven332/vscode-sksl.git"
    },
    "bugs": {
        "url": "https://github.com/seven332/vscode-sksl/issues"
    },
    "main": "./build/index.js",
    "icon": "./resources/icon.png",
    "engines": {
        "vscode": "^1.77.0"
    },
    "extensionKind": [
        "workspace"
    ],
    "contributes": {
        "languages": [
            {
                "id": "sksl",
                "aliases": [
                    "SkSL",
                    "SKSL",
                    "sksl"
                ],
                "extensions": [
                    "sksl"
                ],
                "configuration": "./build/language.json",
                "icon": {
                    "light": "./resources/sksl-light.png",
                    "dark": "./resources/sksl-dark.png"
                }
            }
        ],
        "grammars": [
            {
                "language": "sksl",
                "scopeName": "source.sksl",
                "path": "./build/grammar.json"
            }
        ],
        "walkthroughs": [
            {
                "id": "skslWelcome",
                "title": "Get Started with SkSL",
                "description": "Enable Code IntelliSense for SkSL",
                "steps": [
                    {
                        "id": "sksl.setKind",
                        "title": "Set the kind of SkSL",
                        "description": "The kind of SkSL must be presented in source code. It could be `shader`, `colorfilter`, `blender`, `meshfrag` or `meshvert`.",
                        "media": {
                            "svg": "./resources/walkthrough-set-kind.svg",
                            "altText": "SkSL kind"
                        }
                    }
                ]
            }
        ]
    },
    "dependencies": {
        "vscode-languageclient": "^9.0.1",
        "vscode-languageserver": "^9.0.1",
        "vscode-languageserver-textdocument": "^1.0.8",
        "vscode-uri": "^3.0.7"
    },
    "devDependencies": {
        "@rollup/plugin-commonjs": "^25.0.4",
        "@rollup/plugin-node-resolve": "^15.0.2",
        "@rollup/plugin-terser": "^0.4.1",
        "@rollup/plugin-typescript": "^11.1.0",
        "@types/emscripten": "^1.39.9",
        "@types/jest": "^29.5.0",
        "@types/node": "^20.8.2",
        "@types/vscode": "^1.77.0",
        "@typescript-eslint/eslint-plugin": "^6.7.4",
        "@typescript-eslint/parser": "^6.7.4",
        "@vscode/test-electron": "^2.3.6",
        "@vscode/test-cli": "^0.0.4",
        "@vscode/vsce": "^2.21.1",
        "eslint": "^8.38.0",
        "jest": "^29.5.0",
        "prettier": "^3.0.3",
        "rollup": "^4.1.4",
        "ts-jest": "^29.1.0",
        "ts-node": "^10.9.1",
        "tslib": "^2.6.2",
        "typescript": "^5.0.4"
    },
    "scripts": {
        "prepare": "ts-node script prepare",
        "build": "ts-node script build",
        "debug": "ts-node script debug",
        "test": "ts-node script test",
        "format": "ts-node script format",
        "package": "ts-node script package"
    },
    "eslintConfig": {
        "parser": "@typescript-eslint/parser",
        "plugins": [
            "@typescript-eslint"
        ],
        "extends": [
            "eslint:recommended",
            "plugin:@typescript-eslint/recommended"
        ]
    },
    "prettier": {
        "printWidth": 120,
        "tabWidth": 4,
        "useTabs": false,
        "semi": false,
        "singleQuote": true,
        "quoteProps": "as-needed",
        "jsxSingleQuote": false,
        "trailingComma": "all",
        "bracketSpacing": true,
        "bracketSameLine": false,
        "arrowParens": "always"
    }
}
